// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.2.0
// - protoc             (unknown)
// source: dictionary.proto

package service

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

// EnglishDictionaryServiceClient is the client API for EnglishDictionaryService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type EnglishDictionaryServiceClient interface {
	EnglishDictionarySearchWord(ctx context.Context, in *EnglishDictionarySearchWordRequest, opts ...grpc.CallOption) (*EnglishDictionarySearchWordResponse, error)
}

type englishDictionaryServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewEnglishDictionaryServiceClient(cc grpc.ClientConnInterface) EnglishDictionaryServiceClient {
	return &englishDictionaryServiceClient{cc}
}

func (c *englishDictionaryServiceClient) EnglishDictionarySearchWord(ctx context.Context, in *EnglishDictionarySearchWordRequest, opts ...grpc.CallOption) (*EnglishDictionarySearchWordResponse, error) {
	out := new(EnglishDictionarySearchWordResponse)
	err := c.cc.Invoke(ctx, "/pb.EnglishDictionaryService/EnglishDictionarySearchWord", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// EnglishDictionaryServiceServer is the server API for EnglishDictionaryService service.
// All implementations should embed UnimplementedEnglishDictionaryServiceServer
// for forward compatibility
type EnglishDictionaryServiceServer interface {
	EnglishDictionarySearchWord(context.Context, *EnglishDictionarySearchWordRequest) (*EnglishDictionarySearchWordResponse, error)
}

// UnimplementedEnglishDictionaryServiceServer should be embedded to have forward compatible implementations.
type UnimplementedEnglishDictionaryServiceServer struct {
}

func (UnimplementedEnglishDictionaryServiceServer) EnglishDictionarySearchWord(context.Context, *EnglishDictionarySearchWordRequest) (*EnglishDictionarySearchWordResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method EnglishDictionarySearchWord not implemented")
}

// UnsafeEnglishDictionaryServiceServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to EnglishDictionaryServiceServer will
// result in compilation errors.
type UnsafeEnglishDictionaryServiceServer interface {
	mustEmbedUnimplementedEnglishDictionaryServiceServer()
}

func RegisterEnglishDictionaryServiceServer(s grpc.ServiceRegistrar, srv EnglishDictionaryServiceServer) {
	s.RegisterService(&EnglishDictionaryService_ServiceDesc, srv)
}

func _EnglishDictionaryService_EnglishDictionarySearchWord_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EnglishDictionarySearchWordRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EnglishDictionaryServiceServer).EnglishDictionarySearchWord(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.EnglishDictionaryService/EnglishDictionarySearchWord",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EnglishDictionaryServiceServer).EnglishDictionarySearchWord(ctx, req.(*EnglishDictionarySearchWordRequest))
	}
	return interceptor(ctx, in, info, handler)
}

// EnglishDictionaryService_ServiceDesc is the grpc.ServiceDesc for EnglishDictionaryService service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var EnglishDictionaryService_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "pb.EnglishDictionaryService",
	HandlerType: (*EnglishDictionaryServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "EnglishDictionarySearchWord",
			Handler:    _EnglishDictionaryService_EnglishDictionarySearchWord_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "dictionary.proto",
}
