// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.2.0
// - protoc             (unknown)
// source: history.proto

package historyService

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

// DictionaryHistoryServiceClient is the client API for DictionaryHistoryService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type DictionaryHistoryServiceClient interface {
	DictionaryHistory(ctx context.Context, in *DictionaryHistoryRequest, opts ...grpc.CallOption) (*DictionaryHistoryResponse, error)
}

type dictionaryHistoryServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewDictionaryHistoryServiceClient(cc grpc.ClientConnInterface) DictionaryHistoryServiceClient {
	return &dictionaryHistoryServiceClient{cc}
}

func (c *dictionaryHistoryServiceClient) DictionaryHistory(ctx context.Context, in *DictionaryHistoryRequest, opts ...grpc.CallOption) (*DictionaryHistoryResponse, error) {
	out := new(DictionaryHistoryResponse)
	err := c.cc.Invoke(ctx, "/history.DictionaryHistoryService/DictionaryHistory", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// DictionaryHistoryServiceServer is the server API for DictionaryHistoryService service.
// All implementations should embed UnimplementedDictionaryHistoryServiceServer
// for forward compatibility
type DictionaryHistoryServiceServer interface {
	DictionaryHistory(context.Context, *DictionaryHistoryRequest) (*DictionaryHistoryResponse, error)
}

// UnimplementedDictionaryHistoryServiceServer should be embedded to have forward compatible implementations.
type UnimplementedDictionaryHistoryServiceServer struct {
}

func (UnimplementedDictionaryHistoryServiceServer) DictionaryHistory(context.Context, *DictionaryHistoryRequest) (*DictionaryHistoryResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DictionaryHistory not implemented")
}

// UnsafeDictionaryHistoryServiceServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to DictionaryHistoryServiceServer will
// result in compilation errors.
type UnsafeDictionaryHistoryServiceServer interface {
	mustEmbedUnimplementedDictionaryHistoryServiceServer()
}

func RegisterDictionaryHistoryServiceServer(s grpc.ServiceRegistrar, srv DictionaryHistoryServiceServer) {
	s.RegisterService(&DictionaryHistoryService_ServiceDesc, srv)
}

func _DictionaryHistoryService_DictionaryHistory_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DictionaryHistoryRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DictionaryHistoryServiceServer).DictionaryHistory(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/history.DictionaryHistoryService/DictionaryHistory",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DictionaryHistoryServiceServer).DictionaryHistory(ctx, req.(*DictionaryHistoryRequest))
	}
	return interceptor(ctx, in, info, handler)
}

// DictionaryHistoryService_ServiceDesc is the grpc.ServiceDesc for DictionaryHistoryService service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var DictionaryHistoryService_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "history.DictionaryHistoryService",
	HandlerType: (*DictionaryHistoryServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "DictionaryHistory",
			Handler:    _DictionaryHistoryService_DictionaryHistory_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "history.proto",
}
